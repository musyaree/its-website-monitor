name: Monitor Website ITS

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

jobs:
  monitor:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependensi
        run: |
          python -m pip install --upgrade pip
          pip install requests pytz speedtest-cli
          # Pastikan kita tahu modul Python yang dipakai
          python -m pip show speedtest-cli

      - name: Jalankan pengujian jaringan dan website ITS
        shell: pwsh
        run: |
          Write-Host "Menjalankan pengujian jaringan dan website ITS..."
          python - <<'PY'
import requests, csv, time, datetime, pytz
from speedtest import Speedtest

# pastikan pakai speedtest-cli Python, bukan binary Ookla
st = Speedtest()
st.get_servers([57415, 3697, 28922])  # Surabaya, Jakarta, Bandung
best = st.get_best_server()
download = round(st.download() / 1_000_000, 2)
upload = round(st.upload() / 1_000_000, 2)
ping = round(best['latency'], 2)

urls = [
    "https://portal.its.ac.id",
    "https://classroom.its.ac.id",
    "https://presensi.its.ac.id"
]

surabaya = pytz.timezone("Asia/Jakarta")
timestamp = datetime.datetime.now(surabaya).strftime("%Y-%m-%d %H:%M:%S WIB")

filename = "hasil_pengujian.csv"
header = ["timestamp", "url", "status_code", "total_bytes", "elapsed_time", "ping", "download_Mbps", "upload_Mbps"]

rows = []
for url in urls:
    try:
        start = time.time()
        response = requests.get(url, timeout=20)
        elapsed = round(time.time() - start, 3)
        total_bytes = len(response.content)
        code = response.status_code
    except Exception:
        elapsed = 0
        total_bytes = 0
        code = 0
    rows.append([timestamp, url, code, total_bytes, elapsed, ping, download, upload])

try:
    with open(filename, "x", newline="", encoding="utf-8") as f:
        writer = csv.writer(f)
        writer.writerow(header)
        writer.writerows(rows)
except FileExistsError:
    with open(filename, "a", newline="", encoding="utf-8") as f:
        writer = csv.writer(f)
        writer.writerows(rows)

print("Pengujian selesai. Hasil disimpan di", filename)
PY

      - name: Upload hasil CSV
        uses: actions/upload-artifact@v4
        with:
          name: hasil_pengujian
          path: hasil_pengujian.csv
